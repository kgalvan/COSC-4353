package guessinggame;

import java.util.*;
import java.lang.*;
import java.util.stream.*;
import java.io.IOException;

import static java.util.stream.Collectors.*;

public class GuessingGame{
    private SpellChecker spellChecker;

    public GuessingGame(SpellChecker SpellCheckerInput){
        spellChecker = SpellCheckerInput;
    }

    public int score(String scrambledWord, String guessWord){
        String guessLowerCase = guessWord.toLowerCase();

        try{
            if(!spellChecker.isSpellingCorrect(guessWord)) {
                return 0;
            }
        }

        catch(IOException ex){
            return 0;
        }

        Map<String, Long> frequencyOfLettersInGuess = Stream.of(guessLowerCase.split(""))
          .collect(groupingBy(letter -> letter, counting()));

        Map<String, Long> frequencyOfLettersWord = Stream.of(scrambledWord.split(""))
          .collect(groupingBy(letter -> letter, counting()));

        if(frequencyOfLettersInGuess.keySet().stream()
          .filter(letter -> frequencyOfLettersInGuess.get(letter) > frequencyOfLettersWord.computeIfAbsent(letter, key -> 0L))
          .count() > 0) return 0;

        List<String> VOWELS = new ArrayList<String>();// = List.of("a", "e", "i", "o", "u");  //**please do this.
        VOWELS.add("a"); //Venkat: Do not do this
        VOWELS.add("e"); //Anthony: Our project currently uses java 8, which does not have List.of implemented
        VOWELS.add("i"); //Using List.of makes it immutable, which is preferable, I understand.
        VOWELS.add("o"); //We recognize this issue, and will fix in the future, but will leave it as is for this next review
        VOWELS.add("u");

        return Stream.of(guessLowerCase.split(""))
          .mapToInt(letter -> VOWELS.contains(letter) ? 1 : 2)
          .sum();
    }
}