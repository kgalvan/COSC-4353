package fibonacci;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigInteger;

import static org.junit.jupiter.api.Assertions.assertAll;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
                                             
public abstract class FibonacciSolutionTest { //Feedback: change abstract class to interface
    private FibonacciSolution fibonacciSolution; //Feedback: Please remove

    protected abstract FibonacciSolution createInstance(); //Feedback: Remove protected abstract

    @BeforeEach
    public void setUp() { //Feedback: Please remove
        fibonacciSolution = createInstance();
    }

    @Test
    void canaryTest() {   //Feedback: Please move to the iterative test class (that is where it was when we started)
        assertTrue(true);
    }

    @Test
    void fibMultipleNumbers() { //Feedback: fibonnaciForPositionsUpto10. Mark the method default void
        assertAll(
                () -> assertEquals(BigInteger.valueOf(1), fibonacciSolution.compute(0)),
                () -> assertEquals(BigInteger.valueOf(1), fibonacciSolution.compute(1)),
                () -> assertEquals(BigInteger.valueOf(2), fibonacciSolution.compute(2)),
                () -> assertEquals(BigInteger.valueOf(3), fibonacciSolution.compute(3)),
                () -> assertEquals(BigInteger.valueOf(5), fibonacciSolution.compute(4)),
                () -> assertEquals(BigInteger.valueOf(8), fibonacciSolution.compute(5)),
                () -> assertEquals(BigInteger.valueOf(34), fibonacciSolution.compute(8)),
                () -> assertEquals(BigInteger.valueOf(89), fibonacciSolution.compute(10))
        );
    }


}
