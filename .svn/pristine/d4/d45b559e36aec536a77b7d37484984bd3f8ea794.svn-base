package guessinggame;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class GuessingGameTest {
    GuessingGame guessingGame;

   @BeforeEach
    void init(){
       guessingGame = new GuessingGame(new SpellCheckerService());
    }

    @Test
    void Canary() {
        assertTrue(true);
    }

    @Test
    void scoreIsZero() {
        assertEquals(0, guessingGame.score("oekmny", ""));
    }

    @Test
    void scoreIsTwoMConsonant() {
        assertEquals(2, guessingGame.score("oekmny", "m"));
    }

    @Test
    void scoreIsOneOVowel() {
        assertEquals(1, guessingGame.score("oekmny", "o"));
    }

    @Test
    void scoreIsTwoTwoConsonantsNotRealWord() {
        assertEquals(0, guessingGame.score("oekmny", "mn"));
    }

    @Test
    void scoreIsTwoTwoVowelsNotRealWord() {
        assertEquals(0, guessingGame.score("oekmny", "oe"));
    }

    @Test
    void scoreIsThreeOneConsonantOneVowel() {
        assertEquals(3, guessingGame.score("oekmny", "mo"));
    }

    @Test
    void scoreIsZeroLetterNotInScrambledWord() {
        assertEquals(0, guessingGame.score("oekmny", "a"));
    }

    @Test
    void scoreIsThreeMeInput() {
        assertEquals(3, guessingGame.score("oekmny", "Me"));
    }

    @Test
    void scoreIsFiveMatInput() {
        assertEquals(0, guessingGame.score("oekmny", "mat"));
    }

    @Test
    void scoreIsZeroMoonInput() {
        assertEquals(0, guessingGame.score("oekmny", "moon"));
    }
}


